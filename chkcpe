#!/usr/bin/env php
<?php
declare(strict_types=1);

/**
 * @param string $str
 */
function escapeCPE(string $str): string
{
    $res = preg_replace('/([^_a-zA-Z0-9])/', '\\\\$1', $str);
    if($res === null)
        die('Could not escape string'."\n");

    return $res;
}

/**
 * @param ?string $status
 * @param ?array<string, mixed> $port
 */
function writeMarkdownLog(?string $status = null, ?array $port = null): bool
{
    static $fpcache = [];

    $statusmap = array(
      'valid'   => 'brightgreen',
      'invalid' => 'red',
      'missing' => 'orange',
      'unknown' => 'grey'
   );

    if ($status == null || $port == null) {
        foreach ($fpcache as $fp) {
            $footer = "\n";

            fwrite($fp, $footer);
            fflush($fp);
            fclose($fp);
        }

        $fpcache = [];
        return true;
    }

    $status = strtolower($status);

    if (!isset($fpcache[$status])) {
        $header = '';
        $header .= sprintf("Date: %s\n", date(DATE_RFC850));
        $header .= sprintf("\n");
        $header .= sprintf("| Port | Maintainer | Status | Comment |\n");
        $header .= sprintf("|--|--|--|--|\n");

        $logfile = $GLOBALS['LOGSDIR'].DIRECTORY_SEPARATOR.strtolower($status).'.md';

        $fpcache[$status] = fopen($logfile, 'w');
        if ($fpcache[$status] === false) {
            die('Could not open logfile '.$logfile."\n");
        }

        fwrite($fpcache[$status], $header);
    }

    $color = 'black';

    if (isset($statusmap[$status])) {
        $color = $statusmap[$status];
    }

    $content = sprintf(
        "| [%s](https://freshports.org/%s) | %s | ![%s](https://img.shields.io/badge/%s-%s) | %s |\n",
        $port['origin'],
        $port['origin'],
        $port['maintainer'],
        $status,
        $status,
        $color,
        $port['msg']
    );

    fwrite($fpcache[$status], $content);

    return true;
}

$PORTSDIR = getenv('PORTSDIR');
$LOGSDIR = getenv('LOGSDIR');
$CPEDB = getenv('CPEDB');
$MAKE = getenv('MAKE');

if($PORTSDIR == null)
    $PORTSDIR = '/usr/ports';

if($LOGSDIR == null)
    $LOGSDIR = getcwd().'/logs';

if($CPEDB == null)
    $CPEDB = getcwd().'/cpe.sqlite';

if($MAKE == null)
    $MAKE = '/usr/bin/make';


$db = new \PDO('sqlite:'.$CPEDB);
$db->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
$db->exec('PRAGMA foreign_keys = ON;');
$db->exec('PRAGMA encoding = "UTF-8";');

chdir($PORTSDIR);
$stats = ['all' => 0];

$categories = scandir('.');

if($categories === false)
    die('scandir() failed'."\n");

foreach ($categories as $category) {
    if (!is_dir($category) || $category[0] == '.' || in_array($category, ['Mk', 'Templates', 'Tools', 'distfiles', 'packages'])) {
        continue;
    }

    $ports = scandir($category);
    if($ports === false)
        die('scandir() failed'."\n");

    foreach ($ports as $port) {
        $origin = $category.'/'.$port;

        if (!is_dir($origin) || $port[0] == '.') {
            continue;
        }

        $output = [];
        $resultcode = null;
        exec("$MAKE -C $origin -VPORTNAME:tl -VMAINTAINER -VCPE_STR -VCPE_VENDOR -VCPE_PRODUCT", $output, $resultcode);

        if ($resultcode != 0) {
            continue;
        }

        $port = [
         'origin' => $origin,
         'portname' => $output[0],
         'maintainer' => $output[1],
         'cpe_str' => $output[2],
         'cpe_vendor' => $output[3],
         'cpe_product' => $output[4]
      ];

        if ($port['cpe_str'] != '') {
            $stmt = $db->prepare('SELECT COUNT(*) FROM categorized_cpes WHERE vendor = ? AND product = ?');
            if (!$stmt->execute([escapeCPE($port['cpe_vendor']), escapeCPE($port['cpe_product'])])) {
                throw new \Exception('DB Error');
            }

            $row = $stmt->fetch(\PDO::FETCH_NUM);
            if (!is_array($row)) {
                throw new \Exception('DB Error');
            }

            if ($row[0] > 0) {
                $port['status'] = 'VALID';
                $port['msg'] = 'found '.$row[0].' CPE entries';
            } else {
                $port['status'] = 'INVALID';
                $port['msg'] = 'Vendor '.$port['cpe_vendor'].' Product '.$port['cpe_product'].' not found in DB';
            }
        } else {
            $stmt = $db->prepare('SELECT vendor, product FROM categorized_cpes WHERE product = ? GROUP BY vendor');
            if (!$stmt->execute([strtolower(escapeCPE($port['portname']))])) {
                throw new \Exception('DB Error');
            }

            while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
                $port['candidates'][] = $row['vendor'].':'.$row['product'];
            }

            if (isset($port['candidates'])) {
                $port['status'] = 'MISSING';
                $port['msg'] = implode(', ', $port['candidates']);
            } else {
                $port['status'] = 'UNKNOWN';
                $port['msg'] = '';
            }
        }

        writeMarkdownLog($port['status'], $port);

        if (!isset($stats[$port['status']])) {
            $stats[$port['status']] = 0;
        }

        $stats[$port['status']]++;
        $stats['all']++;

        if ($stats['all'] % 100 == 0) {
            printf("%d ...\n", $stats['all']);
        }
    }
}

writeMarkdownLog();

foreach ($stats as $status => $count) {
    printf("%-10s %5d\n", $status, $count);
}
